#include "Trajectory.h"
#include "Usart.h"

//extern SerialUSART2 usart;


//**************************************************
Hip_Gate::Hip_Gate()
{
		float Position_Vector[65]={113.25, 111.75,110.2,108.7,107.2,105.2214013,103.9401477,102.2501131,99.71437293,96.96849033,93.7209228,90.4287798,87.15471392,83.89662553,80.4146184,76.97489121,73.55688623,70.10277402,66.82404143,63.57385477,60.47434741,57.53143226,54.62580698,51.82297032,48.92142564,45.96483943,43.15867456,40.43383759,37.70091587,35.04026923,32.69029388,30.62537915,28.91960297,27.67565997,26.81633312,26.17200186,25.814588,25.97699067,26.91057873,28.8397692,31.64874536,35.5934765,40.18912979,45.65320312,51.55350184,58.13683653,64.63506027,71.43291199,77.88053235,84.12047514,90.10795582,95.59281781,100.6394066,105.04194,108.9676772,112.1570168,114.6485675,116.6978531,117.6186305,118.2863836,118.2723582,117.6563129,116.7691332,115.5297133,114.475844};
		//=Hip_Gate_Points;
			
}

double Hip_Gate :: Forward(void){

return 0;
}

double Hip_Gate :: Backward(void){

return 0;
}

void Hip_Gate :: SetStartPoint(int Start_Point){

	if (Start_Point>100 || Start_Point <0)
		{
			this->StartPoint=Start_Point;
//			usart.puts("Start Point Ingresado");
		}
//			usart.puts("Start Point Invalido");
	
}


